<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-chroot-changingowner">
  <?dbhtml filename="changingowner.html"?>

  <title>Changing Ownership</title>

    <para os="a">Currently, the <filename class="directory">/tools</filename>
    and <filename class="directory">/cross-tools</filename> directories
    are owned by the user <emphasis>clfs</emphasis>, a user that
    exists only on the host system. Although <filename
    class="directory">/tools</filename> and <filename
    class="directory">/cross-tools</filename> can be deleted once the CLFS
    system has been finished, they can be retained to build
    additional CLFS systems. If the <filename class="directory">/tools</filename>
    and <filename class="directory">/cross-tools</filename> directories are
    kept as is, the files are owned by a user ID without a corresponding
    account. This is dangerous because a user account created later could
    get this same user ID and would own these directories and all the files
    therein, thus exposing those files to possible malicious manipulation.</para>

    <para os="b">One possible fix for this issue might be to add the
    <systemitem class="username">clfs</systemitem> user to the new CLFS system
    later when creating the <filename>/etc/passwd</filename> file, taking care
    to assign it the same user and group IDs as on the host system. Alternatively,
    assign the contents of the <filename class="directory">/tools</filename>
    and <filename class="directory">/cross-tools</filename> directories to
    user <systemitem class="username">root</systemitem> by running the
    following commands:</para>

<screen os="c"><userinput>chown -Rv 0:0 /tools
chown -Rv 0:0 /cross-tools</userinput></screen>

    <para os="d">The commands use <parameter>0:0</parameter> instead of
    <parameter>root:root</parameter>, because <command>chown</command>
    is unable to resolve the name <quote>root</quote> until the
    <filename>passwd</filename> file has been created.</para>

</sect1>
